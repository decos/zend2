Ianstalacion de ZEND 2.5 (linux)
	1. Descargar ZEND  de la siguiente ruta
		http://victorroblesweb.es/wp-content/uploads/2014/03/ZendSkeletonApplication-master.zip
	2. Localizar el proyecto en /opt/lampp/htdocs
	3. Actualizar las dependencias usando el comando "composer install"

-- AGREGAR NUEVOS CONTROLADORES
	C:\xampp\htdocs\zend2\module\Application\config\module.config.php
	
-- AGREGAR NUEVAS RUTAS
	C:\xampp\htdocs\zend2\module\Application\config\module.config.php
	TIPOS:
		- Literal = Ruta Fija
		- Segment = Te permite agregar nuevos parametros por la URL de forma sencilla
		
	PARAMETROS
		- [/:id][/:id2] es distinto que
		- [/:id/:id2] 

-- REDIRECCIONES
	return $this->redirect()->toRoute("home");
	return $this->redirect()->toUrl( $this->getRequest()->getBaseUrl() );
	return $this->redirect()->toUrl("http://www.google.com");

-- PLANTILLAS
	Aqui se define todo el tema de las plantillas
	/opt/lampp/htdocs/zend2/module/Application/config/module.config.php (view_manager)

-- MODULOS
	Puedes crearlo de forma manual o ingresando a la siguiente URL
	https://github.com/zendframework/ZendSkeletonModule

-- FORMULARIOS
	1. Crear nueva carpeta
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Form
	2. Crear archivo (ejemplo)
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Form/FormPruebas.php
	3. Añadir namespace y lo que necesita la clase.
	4. En el controlador
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Controller/IndexController.php
	   - Añadir el formulario usando "use"
	   - Creamos el metodo "formAction"
	5. Creamos la vista
           	/opt/lampp/htdocs/zend2/module/Application/view/application/index/form.phtml
	   - Aquí se pueden definir atributos ($form->setAttributes)
           - Pintar el formulario
		echo $this->form()->openTag($form);
	   - Pintar el label
		echo $formLabel->openTag().$nombre->getOption("label")." ";
	   - Pintar el input
		echo $this->formInput($nombre);
 	   - Cerramos el label
		echo $formLabel->closeTag();

	   - COMO GENERAR EL INPUT ENTERO, EN UNA SOLA LINEA
		echo $this->formElement($form-get("submit"));
	
	   - COMO GENERAR EL FORMULARIO ENTERO, EN UNA SOLA LINEA (automatico)
		echo $this->formCollection($form);
		
-- RECIBIR DATOS DE FORMULARIO
	1. Crear ruta en el archivo de configuracion
	2. Modificar el action del formulario
	3. Crear la accion en el controlador

-- VALIDACION DE DATOS SIMPLE
	1. Incluir componentes de validaciones
		use Zend\Validator;
		use Zend\I18n\Validator as I18nValidator;

-- VALIDACIONES Y FILTROS
	1. Para validar, se debe crear en la carpeta Form un nuevo fichero
	/opt/lampp/htdocs/zend2/module/Application/src/Application/Form/FormPruebasValidator.php
	
	FILTROS
		1. StripTags = Este filtro puede quitar las etiquetas XML y HTML del contenido dado
		2. StringTrim = Que borre los espacios por delante y detras
		
	2. Agregamos la nueva regla de validacion en el formulario
	/opt/lampp/htdocs/zend2/module/Application/src/Application/Form/FormPruebas.php
		$this->setInputFilter(new \Application\Form\FormPruebasValidator());

	3. Cambiar el comportamiento que tiene el formulario en el Controlador
	/opt/lampp/htdocs/zend2/module/Application/src/Application/Controller/IndexController.php

-- CONFIGURACION DE LA BASE DE DATOS
	1. Crear el siguiente archivo en la ruta
		/opt/lampp/htdocs/zend2/config/autoload/local.php

	2. Poner el "service_manager" de la base de datos
	3. En el "service_manager" se coloca el adaptador que se conecta a la base de datos
	4. Configuramos la base de datos
	5. Crear base de datos

-- MODELOS Y ENTIDADES
	1. Crear directorio MODEL dentro de SRC/APPLICATION
	2. Crear la clase Usuario que representara una ENTIDAD
	3. Crear la clase UsuariosTable que representa el MODELO o conjunto de metodos que iteractuan con la base de datos.
	4. Configurar MODULE.PHP para trabajar en conjunto e inyecta datos el uno al otro.
		Agregar las dependencias
	5. Definir en IndexController un atributo protected y una funcion protected
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Controller/IndexController.php
		- $usuariosTable (atributo)
		- getUsuariosTable (function)
		- listarAction (function)
	
	ERROR en la funcion getUsuariosTable()
			SOLUCIÓN: $sm =  $this->serviceLocator;
		
-- CONSULTAS SQL NATIVO
	
	protected $dbAdapter;
	$this->dbAdapter = $tableGateway->adapter;
	fetchAllSql
	/opt/lampp/htdocs/zend2/module/Application/src/Application/Model/UsuariosTable.php

	listarAction
	/opt/lampp/htdocs/zend2/module/Application/src/Application/Controller/IndexController.php

-- QUERY BUILDER
	- Cualquier tipo de consultas, puedes hacer JOINS.
	- Esta mas abstraido del codigo SQL.
	- Es mas flexible si cambias de base de datos.

	fetchAllSql
	/opt/lampp/htdocs/zend2/module/Application/src/Application/Model/UsuariosTable.php
	
-- CONVERTIR UN ARRAY DEL COMPONENTE RESULT SET EN UN ARRAY DE OBJETOS
	$resultSet = new ResultSet();
        $data = $resultSet->initialize($data);

-- VIEW HELPERS
	1. Crear directorio /opt/lampp/htdocs/zend2/module/Application/src/Application/View
	2. Crear directorio /opt/lampp/htdocs/zend2/module/Application/src/Application/View/Helper
	3. Ejemplo: Crear archivo LowerCase.php
	4. Agregar el helper al siguiente archivo:
		/opt/lampp/htdocs/zend2/module/Application/config/module.config.php
	
-- EJEMPLO COMPLETO
	-- RUTAS
		1. Configurar la ruta en el archivo:
		/opt/lampp/htdocs/zend2/module/Application/config/module.config.php

		2. Crear el archivo controlador:
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Controller/EjemploController.php

	-- EL MODELO
		Se utilizara el siguiente modelo:
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Model/UsuariosTable.php

	-- LISTADO DE USUARIOS
		1. Crear el directorio de la vista
			/opt/lampp/htdocs/zend2/module/Application/view/application/ejemplo
		2. Crear el fichero "index.phtml"
			/opt/lampp/htdocs/zend2/module/Application/view/application/ejemplo/index.phtml
		3. Configurar la funcion getUsuariosTable()
		4. Configurar la siguiente vista:
			/opt/lampp/htdocs/zend2/module/Application/view/application/ejemplo/index.phtml

	-- AÑADIR USUARIOS
		1. Agregamos el boton "Agregar usuario" a la vista
		2. Agregamos  la función "addAction" al controlador
		3. Creamos el formulario
			/opt/lampp/htdocs/zend2/module/Application/src/Application/Form/FormAddUsuarios.php
		4. Creamos la vista
			/opt/lampp/htdocs/zend2/module/Application/view/application/ejemplo/add.phtml
		5. Creamos un validador para el formulario "FormAddUsuariosValidator"
			/opt/lampp/htdocs/zend2/module/Application/src/Application/Form/FormAddUsuarios.php
		y Añadimos el siguiente codigo en el formulario:
			$this->setInputFilter(new \Application\Form\FormAddUsuariosValidator());
		6.Programar la logica para agregar el registro "addAction" en el controlador

	-- MENSAJES FLASH
		En el mundo de los Frameworks un Flash o Flash Data es una pequeña sesion que solo
		se ejecuta una sola vez. Una vez que se muestre se va eliminar.
		
		Agregar logica:		
		/opt/lampp/htdocs/zend2/module/Application/src/Application/Controller/EjemploController.php
		/opt/lampp/htdocs/zend2/module/Application/view/application/ejemplo/index.phtml

		Se puede realizar la configuracion en el config del modulo.
		https://framework.zend.com/manual/2.3/en/modules/zend.view.helpers.flash-messenger.html

	-- CIFRAR DATOS CON BCRYPT
		Es importante para mantener la seguridad de la aplicacion.

		1. Añadir el componente use Zend\Crypt\Password\Bcrypt;
		2. Añadir la lógica al metodo del controlador "addAction"
		

	-- EDITAR USUARIOS
		
		1. Añadir el fichero "edit.phtml"
			/opt/lampp/htdocs/zend2/module/Application/view/application/ejemplo/edit.phtml
		2. Corregir la funcion ya creada "saveUsuario"
		3. Añadir el campo oculto "id" al formulario "FormAddUsuarios.php" 
		4. Codear la funcion "editAction" en nuestro Controlador
		5. Codear en el fichero "edit.phtml" lo mismo del fichero "add.phtml"
		
	-- PAGINACION
		1. Agregar el componente "DbSelect" y "Paginator"
		2. Refinar la logica de la funcion "fetchAll()"
			/opt/lampp/htdocs/zend2/module/Application/src/Application/Model/UsuariosTable.php
		3. Refinar la logica de la funcion "indexAction" que esta en el controlador
		4. Creamos el directorio PARTIAL en la carpeta de vista
			/opt/lampp/htdocs/zend2/module/Application/view/partial
		5. Crear el fichero "paginator.phtml" dentro del directorio "partial" 
		6. Buscar en google "paginator.phtml zf2" y copiar el codigo "Creating the Pagination Control Partial" demtro de  "paginator.phtml"
		7. Agregar "paginationControl" en el "index.phtml"

	-- SESIONES
		- No sea usa la variable global $_SESSION["nombre"]
		- Se usan contenedores
		1. Agregar al controlador el componente "use Zend\Session\Container;"
		2. Crear el fichero sesiones.phtml para ver el comportamiento de las sesiones.
			/opt/lampp/htdocs/zend2/module/Application/view/application/index/sesiones.phtml
		3. Agregar la accion "sesionesAction" al controlador index
		4. Agregar la accion "addAction" al controlador index
		5. Agregar la accion "deleteAction" al controlador index
		










